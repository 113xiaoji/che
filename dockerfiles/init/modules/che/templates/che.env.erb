# Include all custom CHE_* properties that user may has defined in its che.env file
<% ENV.each do |k,v| -%>
<% if k.include? "CHE_" then  -%>
<%= k + '=' + v %>
<% end -%>
<% end -%>


CHE_IP=<%= scope.lookupvar('che::che_ip') %>
CHE_PORT=<%= scope.lookupvar('che::che_port') %>
#DOCKER_HOST=<%= scope.lookupvar('che::docker_host') %>
#DOCKER_MACHINE_HOST=<%= scope.lookupvar('che::docker_ip') %>

<% if @che_jmx_enabled == "true" -%>
CATALINA_OPTS=-Dcom.sun.management.jmxremote=true -Djava.rmi.server.hostname=localhost -Dcom.sun.management.jmxremote.authenticate=true -Dcom.sun.management.jmxremote.password.file=/conf/jmxremote.password -Dcom.sun.management.jmxremote.access.file=/conf/jmxremote.access -Dcom.sun.management.jmxremote.ssl=false
<% end -%>

<% if scope.lookupvar('che::che_env') != "production" -%>
CHE_DEBUG_SERVER=true
JPDA=jpda
CHE_ASSEMBLY=<%= scope.lookupvar('che::che_assembly') %>
JPDA_ADDRESS=<%= scope.lookupvar('che::che_debug_port') %>
<% if scope.lookupvar('che::che_debug_suspend') == "true" %>JPDA_SUSPEND=y<% end %>
<% end -%>

CHE_MULTIUSER=<%= scope.lookupvar('che::che_multiuser') %>
<% if scope.lookupvar('che::che_multiuser') == 'true' -%>
<% if scope.lookupvar('che::che_port') == '8080' -%>
CHE_DOCKER_NETWORK=che_che-network
<% else -%>
CHE_DOCKER_NETWORK=che<%= scope.lookupvar('che::che_port') %>_che-network
<% end -%>
<% else -%>
CHE_DOCKER_NETWORK=bridge
<% end -%>

<% if scope.lookupvar('che::che_single_port') == 'true' -%>
<% if ! @che_docker_ip_external.empty? -%>
CHE_INFRA_DOCKER_MASTER__API__ENDPOINT=http://<%= scope.lookupvar('che::che_docker_ip_external') -%>:<%= scope.lookupvar('che::che_port') -%>/api
CHE_INFRA_DOCKER_MASTER__WEBSOCKET__ENDPOINT=ws://<%= scope.lookupvar('che::che_docker_ip_external') -%>:<%= scope.lookupvar('che::che_port') -%>/api/websocket
<% else -%>
CHE_INFRA_DOCKER_MASTER__API__ENDPOINT=http://<%= scope.lookupvar('che::docker_ip') -%>:<%= scope.lookupvar('che::che_port') -%>/api
CHE_INFRA_DOCKER_MASTER__WEBSOCKET__ENDPOINT=ws://<%= scope.lookupvar('che::docker_ip') -%>:<%= scope.lookupvar('che::che_port') -%>/api/websocket
<% end -%>
<% end -%>

CHE_DATABASE=/data/storage
CHE_WORKSPACE_STORAGE=<%= scope.lookupvar('che::che_instance') %>/data/workspaces
CHE_WORKSPACE_STORAGE__MASTER__PATH=/data/workspaces
CHE_LOGS_DIR=/logs
CHE_WORKSPACE_LOGS=/logs/machines
CHE_TEMPLATE_STORAGE=/data/templates

# Enable single port options
<% if scope.lookupvar('che::che_single_port') == "true" -%>
CHE_INFRA_DOCKER_URL__REWRITER=singleport

<% if scope.lookupvar('che::che_multiuser') == 'true' -%>
<% if scope.lookupvar('che::che_single_port') == 'true' and scope.lookupvar('che::che_single_port_wildcard_domain_ipless') == 'true' -%>
CHE_KEYCLOAK_AUTH__SERVER__URL=http://keycloak.<%= scope.lookupvar('che::che_single_port_wildcard_domain_host') -%>/auth
<% elsif ! @che_docker_ip_external.empty? -%>
CHE_KEYCLOAK_AUTH__SERVER__URL=http://keycloak.<%= scope.lookupvar('che::che_docker_ip_external') -%>.<%= scope.lookupvar('che::che_single_port_wildcard_domain_host') -%>:<%= scope.lookupvar('che::che_port') -%>/auth
<% else -%>
CHE_KEYCLOAK_AUTH__SERVER__URL=http://keycloak.<%= scope.lookupvar('che::docker_ip') -%>.<%= scope.lookupvar('che::che_single_port_wildcard_domain_host') -%>:<%= scope.lookupvar('che::che_port') -%>/auth
<% end -%>
<% end -%>
<% end -%>
